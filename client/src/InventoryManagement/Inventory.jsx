import axios from "axios";
import React, { useEffect, useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import Swal from "sweetalert2";
import jsPDF from "jspdf"; // Import jsPDF for PDF generation
import "./styles/inventory.css";

export default function Inventory() {
  const [users, setUsers] = useState([]); // State for users (inventory items)
  const [searchTerm, setSearchTerm] = useState(""); // State for search term
  const navigate = useNavigate(); // Hook for navigation

  useEffect(() => {
    fetchUsers(); // Fetch users (inventory items) when the component mounts
  }, []);

  const fetchUsers = () => {
    axios
      .get("http://localhost:3001/inventory")
      .then((result) => setUsers(result.data))
      .catch((err) => console.log(err));
  };

  const handleDelete = (id) => {
    Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, delete it!",
    }).then((result) => {
      if (result.isConfirmed) {
        axios
          .delete(`http://localhost:3001/inventory/${id}`)
          .then(() => {
            Swal.fire("Deleted!", "Your item has been deleted.", "success");
            fetchUsers(); // Fetch users again to refresh the list
          })
          .catch((err) => console.error(err));
      }
    });
  };

  const handleViewItem = (user) => {
    if (user.Quantity > 0) {
      axios
        .put(`http://localhost:3001/inventory/${user._id}`, {
          ...user,
          Quantity: user.Quantity - 1,
        })
        .then(() => {
          Swal.fire(
            "Success!",
            "Item viewed. Quantity decreased by 1.",
            "success"
          );
          fetchUsers(); // Fetch users again to refresh the list
        })
        .catch((err) => console.error(err));
    } else {
      Swal.fire("Out of stock", "This item is out of stock!", "warning");
    }
  };

  const handleGenerateReport = () => {
    const doc = new jsPDF();
    const currentDate = new Date().toLocaleDateString();
    const currentTime = new Date().toLocaleTimeString();

    // Header
    doc.setFontSize(20);
    doc.text("Inventory Report", 10, 10);

    // Date and Time
    doc.setFontSize(12);
    doc.text(`Generated on: ${currentDate} at ${currentTime}`, 10, 20);

    // Line break
    doc.line(10, 25, 200, 25); // Horizontal line

    // Define the table columns and data
    const headers = ["Item Name", "Item ID", "Quantity", "Minimum Amount"];
    const data = users.map(user => [
        user.ItemName,
        user.ItemId,
        user.Quantity,
        user.MinimumAmount,
    ]);

    // Add AutoTable for the inventory items
    doc.autoTable({
        head: [headers],
        body: data,
        startY: 30,
        headStyles: { fillColor: [173, 216, 230], textColor: [0, 0, 0], fontSize: 12 }, // Light blue header color
        styles: { fontSize: 10, cellPadding: 5 },
        didDrawCell: (data) => {
            // Draw underline for header
            if (data.section === 'head') {
                doc.setLineWidth(0.5);
                doc.line(data.cell.x, data.cell.y + data.cell.height, data.cell.x + data.cell.width, data.cell.y + data.cell.height);
            }
        },
    });

    // Footer
    const footerY = doc.autoTable.previous.finalY + 10; // Position footer after the table
    doc.line(10, footerY, 200, footerY); // Horizontal line for footer
    doc.setFontSize(10);
    doc.text("Generated by: Levaggio", 10, footerY + 5);

    // Save the PDF
    doc.save("inventory_report.pdf");
};


  const filteredUsers = users.filter(
    (user) =>
      user.ItemName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      user.ItemId.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="d-flex vh-100 justify-content-center align-items-center">
      <div
        className="w-75 bg-white rounded p-4 shadow-lg"
        style={{
          border: "2px solid #8B0000",
          height: "80vh",
          overflowY: "auto",
          marginTop: "100px",
        }}
      >
        <Link
          to="/inventorycreate"
          className="btn btn-success mb-3"
          style={{ width: "150px" }}
        >
          Add +
        </Link>

        <Link to="/low-inventory" className="btn btn-warning mb-3 ms-2">
          Low Inventory
        </Link>
        <button
          className="btn btn-info mb-3 ms-2"
          onClick={handleGenerateReport}
        >
          Generate Report
        </button>

        <input
          type="text"
          className="form-control mb-3"
          placeholder="Search by Item Name or Item ID"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />

        <div style={{ maxHeight: "50vh", overflowY: "scroll" }}>
          <table className="table table-striped">
            <thead style={{ backgroundColor: "#8B0000", color: "white" }}>
              <tr>
                <th>Item Name</th>
                <th>Item ID</th>
                <th>Quantity</th>
                <th>Minimum Quantity</th>
                <th>Action</th>
              </tr>
            </thead>
            <tbody>
              {filteredUsers.map((user) => (
                <tr key={user._id}>
                  <td>{user.ItemName}</td>
                  <td>{user.ItemId}</td>
                  <td>{user.Quantity}</td>
                  <td>{user.MinimumAmount}</td>
                  <td>
                    <Link
                      to={`/inventoryupdate/${user._id}`}
                      className="btn btn-warning"
                    >
                      Update
                    </Link>
                    <button
                      onClick={() => handleViewItem(user)}
                      className="btn btn-info ms-2"
                    >
                      Used
                    </button>
                    <button
                      onClick={() => handleDelete(user._id)}
                      className="btn btn-danger ms-2"
                    >
                      Delete
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}
